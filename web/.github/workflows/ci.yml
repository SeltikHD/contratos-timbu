name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    lint-and-format:
        name: Lint and Format
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Setup pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Type check
              run: pnpm type-check

            - name: Lint check
              run: pnpm lint:check

            - name: Format check
              run: pnpm format:check

    build:
        name: Build Application
        runs-on: ubuntu-latest
        needs: lint-and-format

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Setup pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build application
              run: pnpm build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: .next/
                  retention-days: 1

    # Uncomment when tests are implemented
    # test:
    #     name: Run Tests
    #     runs-on: ubuntu-latest
    #     needs: lint-and-format

    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v4

    #         - name: Setup Node.js
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: "20"

    #         - name: Setup pnpm
    #           uses: pnpm/action-setup@v3
    #           with:
    #               version: 10

    #         - name: Install dependencies
    #           run: pnpm install --frozen-lockfile

    #         - name: Run unit tests
    #           run: pnpm test

    #         - name: Upload coverage reports
    #           uses: codecov/codecov-action@v4
    #           if: success()
    #           with:
    #               file: ./coverage/lcov.info
